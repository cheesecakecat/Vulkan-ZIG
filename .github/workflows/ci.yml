name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Setup Zig
      uses: mlugg/setup-zig@v1
      with:
        version: 0.14.0-dev.2577+271452d22

    - name: Install Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: 1.3.261.1
        vulkan-components: >-
          Vulkan-Headers,
          Vulkan-Loader,
          Glslang,
          SPIRV-Headers
        vulkan-use-cache: true

    - name: Set up Vulkan SDK Environment
      shell: bash
      run: |
        echo "VULKAN_SDK=$VULKAN_SDK" >> $GITHUB_ENV
        echo "$VULKAN_SDK/bin" >> $GITHUB_PATH
        # Debug info
        echo "VULKAN_SDK path: $VULKAN_SDK"
        echo "PATH: $PATH"

    - name: Verify Vulkan Tools
      shell: bash
      run: |
        # Print glslc location
        which glslc || echo "glslc not found in PATH"
        # Check if glslc exists in Vulkan SDK bin
        test -f "$VULKAN_SDK/bin/glslc" && echo "glslc found in VULKAN_SDK/bin" || echo "glslc not found in VULKAN_SDK/bin"
        # List Vulkan SDK bin contents
        ls -la "$VULKAN_SDK/bin" || echo "bin directory not found"

    - name: Build
      run: zig build
      env:
        VULKAN_SDK: ${{ env.VULKAN_SDK }}
        PATH: ${{ env.PATH }}

    - name: Run Tests
      run: zig build test
      env:
        VULKAN_SDK: ${{ env.VULKAN_SDK }}
        PATH: ${{ env.PATH }}

    - name: Check Format
      run: zig fmt --check src/

    - name: Vulkan Validation
      if: runner.os == 'Linux'
      run: |
        zig build test -Dvalidation=true
      env:
        VULKAN_SDK: ${{ env.VULKAN_SDK }}
        PATH: ${{ env.PATH }}

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Zig
      uses: mlugg/setup-zig@v1
      with:
        version: 0.14.0-dev.2577+271452d22

    - name: Run Linter
      run: zig build lint
